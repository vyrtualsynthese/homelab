- hosts: all
  remote_user: vronteix
  become: yes

  tasks:
    - name: install restic
      apt:
        name: restic
        state: present

# Prepare Users and Folder for Slaves Nodes on Master Nodes

- hosts: backup_slave
  remote_user: vronteix
  become: yes

  tasks:
    - name: Create backup users for all slaves
      ansible.builtin.user:
        name: "{{ inventory_hostname }}"
        groups: admins
        state: present
        append: yes
        shell: /bin/bash

    - name: Create .ssh folder for all slaves
      ansible.builtin.file:
        path: "/home/{{ inventory_hostname }}/.ssh"
        state: directory
        owner: "{{ inventory_hostname }}"
        group: "{{ inventory_hostname }}"

    - name: Generate SSH Key for all slave machines
      community.crypto.openssh_keypair:
        path: "/home/{{ inventory_hostname }}/.ssh/id_rsa"
        owner: "{{ inventory_hostname }}"

    - name: Store SSH Keys on Runner Machine
      ansible.builtin.fetch:
        src: "/home/{{ inventory_hostname }}/.ssh/id_rsa.pub"
        dest: "{{ playbook_dir }}/keys/{{ inventory_hostname }}/"
        flat: yes

# Setup on Master Node

- hosts: backup_master
  remote_user: vronteix
  become: yes

  tasks:
    - name: Create backup folder of master
      ansible.builtin.file:
        path: /srv/backup/xps-13
        state: directory
        owner: root
        group: root
        mode: '0750'

    - name: Create users for all slave Nodes
      ansible.builtin.user:
        name: "{{ item }}"
        shell: /bin/bash
      loop: "{{ query('inventory_hostnames', 'backup_slave') }}"

    - name: Create a backup folder for every slaves
      ansible.builtin.file:
        path: /srv/backup/{{ item }}
        state: directory
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: '0750'
      loop: "{{ query('inventory_hostnames', 'backup_slave') }}"

    - name: Copy Slave's SSH key to corresponding authorized Key file
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/keys/{{ item }}/"
        dest: "/home/{{ item }}/.ssh/"
        owner: "{{ item }}"
        group: "{{ item }}"
      loop: "{{ query('inventory_hostnames', 'backup_slave') }}"

# Find a way to export restic password from uncommited file in projet
    # TODO: Check if repository already setup
    - name: Setup Local Repository for Master Node Backup
      ansible.builtin.command: sudo restic init --repo /srv/backup/xps-13

# Prepare Repository for master and child Nodes

# !!!! Write and test backup script for master
# push backup script to master
# configure cronjob to master backup script

# !!! Write backup script for slaves
# push backup script on slaves
# configure cronjob to master backup script
