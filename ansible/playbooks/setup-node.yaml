- hosts: all
  remote_user: vronteix
  become: yes

  tasks:
    - name: create sudoers group
      ansible.builtin.group:
        name: admins
        state: present

    - name: Update and upgrade apt packages
      apt:
        upgrade: full
        update_cache: yes
        cache_valid_time: 86400 #One day

    - name: Create and add vronteix to admin group
      ansible.builtin.user:
        name: vronteix
        state: present
        groups: admins
        append: yes

    - name: Validate the sudoers file before saving
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^admins ALL=(ALL) NOPASSWD: ALL'
        line: '%admins ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Set authorized key taken from file
      ansible.posix.authorized_key:
        user: vronteix
        state: present
        key: "{{ lookup('file', '/home/vyrtualsynthese/.ssh/homelab_rsa.pub') }}"

    - name: Disable root login over SSH
      lineinfile: dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
      notify:
        - restart sshd

    - name: Disable password login
      lineinfile: dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
      notify:
        - restart sshd

    - name: change journal config for 1G max log
      template:
        src: 'scripts/template/journald.conf'
        dest: '/etc/systemd/journald.conf'

    - name: install required packages from apt
      apt:
        pkg:
          - open-iscsi
          - nfs-common
          - original-awk
          - jq
          - smartmontools
          #- linux-modules-extra-5.15.0-73-generic
          - linux-generic

  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted

    - name: reload systemd-journald
      service:
        name: systemd-journald
        state: restarted

- hosts: runner
  remote_user: vronteix
  become: yes
  tasks:

    # Setup Docker
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install pip3
      apt:
        pkg:
          - python3-pip

    - name: Install docker-compose pip3 module
      ansible.builtin.pip:
        name: docker-compose

    - name: Creates directory
      file:
        path: /home/vronteix/dockers
        state: directory
        recurse: yes

    - name: Copy docker-compose.yml
      ansible.builtin.copy:
        src: templates/runners/{{ inventory_hostname }}/docker-compose.yml
        dest: /home/vronteix/dockers/docker-compose.yml

    - name: Copy docker daemon file to expose metrics
      ansible.builtin.copy:
        src: templates/runners/daemon.json
        dest: /etc/docker/daemon.json
      register: docker_daemon

    - name: restart docker if daemon.json changed
      command: systemctl restart docker
      when: docker_daemon.changed

- hosts: rbp0
  remote_user: vronteix
  become: yes
  tasks:

    - name: Copy netplan config
      ansible.builtin.copy:
        src: templates/runners/{{ inventory_hostname }}/50-cloud-init.yaml
        dest: /etc/netplan/50-cloud-init.yaml

    # Configure local DNS
    - name: Disable Stub resolver
      ansible.builtin.command: sed -r -i.orig 's/#?DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf

    - name: Update Netplan
      ansible.builtin.command: sh -c 'rm /etc/resolv.conf && ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf'

    - name: Restart Netplan and make sure it is unmasked and started a boot
      ansible.builtin.systemd:
        state: restarted
        masked: false
        name: systemd-resolved
        enabled: true

- hosts: rbp1
  remote_user: vronteix
  become: yes
  tasks:

    - name: Compress wg configs
      community.general.archive:
        path: /home/vronteix/dockers/config
        dest: /home/vronteix/dockers/config.tgz

    - name: download wg configs
      ansible.builtin.fetch:
        src: /home/vronteix/dockers/config.tgz
        dest: "{{ playbook_dir }}/templates/runners/rbp1/config/wireguard/config.tgz"
        flat: true

- hosts: runner
  remote_user: vronteix
  become: yes
  tasks:

    - name: Up docker compose
      community.docker.docker_compose:
        remove_orphans: true
        state: present
        project_src: /home/vronteix/dockers

- name: localhost
  hosts: localhost
  tasks:


    - name: Extract wireguard config files to folder
      ansible.builtin.unarchive:
        src: "{{ playbook_dir }}/templates/runners/rbp1/config/wireguard/config.tgz"
        dest: "{{ playbook_dir }}/templates/runners/rbp1/config/wireguard/"

    - name: Remove wireguard.tar.gz locally
      ansible.builtin.file:
        path: "{{ playbook_dir }}/templates/runners/rbp1/config/wireguard/config.tgz"
        state: absent

- hosts: xps13
  remote_user: vronteix
  become: yes

  tasks:
    - name: install sqlite3 for master node backup
      apt:
        pkg:
          - sqlite3
