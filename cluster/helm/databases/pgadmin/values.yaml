# Default values for pgAdmin4.

replicaCount: 1

## pgAdmin4 container image
##
image:
  repository: dpage/pgadmin4
  # Overrides the image tag whose default is the chart appVersion.
  tag: "8.10"
  pullPolicy: IfNotPresent

## Server definitions will be loaded at launch time. This allows connection
## information to be pre-loaded into the instance of pgAdmin4 in the container.
## Note that server definitions are only loaded on first launch,
## i.e. when the configuration database is created, and not on subsequent launches using the same configuration database.
## Ref: https://www.pgadmin.org/docs/pgadmin4/latest/import_export_servers.html
##

networkPolicy:
  enabled: false

## Ingress
## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    traefik.ingress.kubernetes.io/router.middlewares: "kube-system-redirect-https@kubernetescrd"
  hosts:
    - host: pgadmin.kub.local
      paths:
        - path: /
          pathType: Prefix
  tls: [ ]

## @param existingSecret Name of existing secret to use for default pgadmin credentials. `env.password` will be ignored and picked up from this secret.
##
existingSecret: "pgadmin"

## pgAdmin4 startup configuration
## Values in here get injected as environment variables
## Needed chart reinstall for apply changes
env:
  # pgpassfile: /var/lib/pgadmin/storage/pgadmin/file.pgpass

  # set context path for application (e.g. /pgadmin4/*)
  # contextPath: /pgadmin4

  ## If True, allows pgAdmin4 to create session cookies based on IP address
  ## Ref: https://www.pgadmin.org/docs/pgadmin4/latest/config_py.html
  ##
  enhanced_cookie_protection: "False"

  ## Add custom environment variables that will be injected to deployment
  ## Ref: https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
  ##
  variables: []
  # - name: PGADMIN_LISTEN_ADDRESS
  #   value: "0.0.0.0"
  # - name: PGADMIN_LISTEN_PORT
  #   value: "8080"

## Additional environment variables from ConfigMaps
envVarsFromConfigMaps: []
  # - array-of
# - config-map-names

## Additional environment variables from Secrets
envVarsFromSecrets: []
  # - array-of
# - secret-names

## Additional environment variables
envVarsExtra: []
  # - name: POSTGRES_USERNAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: pgadmin.pgadmin-db.credentials.postgresql.acid.zalan.do
  #       key: username
  # - name: POSTGRES_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: pgadmin.pgadmin-db.credentials.postgresql.acid.zalan.do
#       key: password

persistentVolume:
  ## If true, pgAdmin4 will create/use a Persistent Volume Claim
  ## If false, use emptyDir
  ##
  enabled: true

  ## pgAdmin4 Persistent Volume Claim annotations
  ##
  annotations: {}

  ## pgAdmin4 Persistent Volume access modes
  ## Must match those of existing PV or dynamic provisioner
  ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  accessModes:
    - ReadWriteOnce

  ## pgAdmin4 Persistent Volume Size
  ##
  size: 10Gi

  ## pgAdmin4 Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  existingClaim: "pgadmin"
  ## Sub-directory of the PV to mount
  # subPath: ""

## pgAdmin4 readiness and liveness probe initial delay and timeout
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 3

## Required to be enabled pre pgAdmin4 4.16 release, to set the ACL on /var/lib/pgadmin.
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
##
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

## Pod affinity
##
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-type
              operator: In
              values:
                - general

init:
  ## Init container resources
  ##
  resources: {}
